###########################################################
# HTTP to HTTPS redirection for mycontent.tools
###########################################################
server {
    listen 80;
    server_name mycontent.tools;
    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

###########################################################
# HTTP server for localhost (прокси в flask и frontend)
###########################################################
server {
    listen 80;
    server_name localhost;
    
    location /api/ {
        rewrite ^/api(/.*)$ $1 break;
        proxy_pass http://flask_app:5000/; # Пример приложения Flask
    }

    location / {
        proxy_pass http://frontend:5000/;  # Пример фронтенда
    }
}

###########################################################
# HTTPS server for mycontent.tools
###########################################################
server {
    listen 443 ssl;
    server_name mycontent.tools;

    # SSL Configuration
    ssl_certificate /root/ssl-keys/cloudflare.crt;
    ssl_certificate_key /root/ssl-keys/cloudflare.key;

    ssl_protocols TLSv1.2 TLSv1.3;  # Secure SSL protocols
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';  # Secure ciphers

    # Cloudflare Proxy Headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Flask API: when the request is on mycontent.tools/api
    location /api/ {
        rewrite ^/api(/.*)$ $1 break;
        proxy_pass http://flask_app:5000/;  # Flask app exposed on host port 5000 (пример)
    }

    # Frontend: when the request is on mycontent.tools (root)
    location / {
        proxy_pass http://frontend:5000;   # Frontend exposed on host port 5000 (пример)
    }
}

###########################################################
# HTTPS server *only* for localhost
# (если вам нужен https-доступ к localhost)
###########################################################
server {
    listen 443 ssl;
    server_name localhost;

    # Указываем локальные сертификаты (пример самоподписанных)
    ssl_certificate /root/ssl-keys/localhost.crt;
    ssl_certificate_key /root/ssl-keys/localhost.key;

    # Прочая SSL-конфигурация
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    # Proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location /api/ {
        rewrite ^/api(/.*)$ $1 break;
        proxy_pass http://flask_app:5000/;
    }
    location / {
        proxy_pass http://frontend:5000/;
    }
}

###########################################################
# HTTP to HTTPS redirection for n8n.mycontent.tools
###########################################################
server {
    listen 80;
    server_name n8n.mycontent.tools n8n.localhost;
    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

###########################################################
# HTTPS server for n8n.mycontent.tools
###########################################################
server {
    listen 443 ssl;
    server_name n8n.mycontent.tools n8n.localhost;

    # SSL Configuration
    ssl_certificate /root/ssl-keys/cloudflare.crt;
    ssl_certificate_key /root/ssl-keys/cloudflare.key;

    ssl_protocols TLSv1.2 TLSv1.3;  # Secure SSL protocols
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';  # Secure ciphers

    # Cloudflare Proxy Headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # N8n: when the request is on n8n.mycontent.tools
    location / {
        proxy_pass http://localhost:8000;  # Пример, если n8n слушает 8000
    }
}
